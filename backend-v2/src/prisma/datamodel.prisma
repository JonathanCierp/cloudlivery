generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("MYSQL_DATABASE_URI")
}

model User {
  id Int @id @default(autoincrement())
  google_id String? @unique
  lastname String?
  firstname String?
  civilite String?
  email String @unique
  password String?
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

  @@map(name: "users")
}

model Provider {
  id Int @id @default(autoincrement())
  label String @unique
  prefix_url String
  produits Produit[]
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "providers")
}

model Marque {
  id Int @id @default(autoincrement())
  label String @unique
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "marques")
}

model LabelsQualite {
  id Int @id @default(autoincrement())
  label String @unique
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "labels_qualites")
}

model Promotion {
  id Int @id @default(autoincrement())
  label String @unique
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "promotions")
}

model PreferencesAlimentaire {
  id Int @id @default(autoincrement())
  label String @unique
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "preferences_alimentaires")
}

model SubstancesControverse {
  id Int @id @default(autoincrement())
  label String @unique
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "substances_controversees")
}

model Format {
  id Int @id @default(autoincrement())
  label String @unique
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "formats")
}

model Rayon {
  id Int @id @default(autoincrement())
  produit_rayons ProduitRayon[]
  label String @unique
  code String @unique
  slug String @unique
  uri String @unique
  level Int
  resultats Int
  scraping Boolean @default(false)
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "rayons")
}

model ProduitRayon {
  id Int @id @default(autoincrement())
  rayon Rayon @relation(fields: [rayon_id], references: [id])
  rayon_id Int
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_rayons")
}

model Produit {
  id Int @id @default(autoincrement())
  produit_rayons ProduitRayon[]
  produit_images ProduitImage[]
  produit_flags ProduitFlag[]
  produit_labels_qualites ProduitLabelsQualite[]
  produit_promotions ProduitPromotion[]
  produit_preferences_alimentaires ProduitPreferencesAlimentaire[]
  produit_substances_controversees ProduitSubstancesControverse[]
  produit_formats ProduitFormat[]
  provider Provider @relation(fields: [provider_id], references: [id])
  provider_id Int
  marque Marque @relation(fields: [marque_id], references: [id])
  marque_id Int
  label String
  brand String?
  ean String?
  slug String? @unique
  uri String?
  packaging String?
  origin String?
  format String?
  price String?
  unit_of_measure String?
  per_unit_label String?
  tax_message String?
  per_unit String?
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produits")
}

model ProduitImage {
  id Int @id @default(autoincrement())
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  largest String
  size_1500x1500 String?
  size_540x540 String?
  size_380x380 String?
  size_340x340 String?
  size_340x240 String?
  size_280x280 String?
  size_195x195 String?
  size_150x150 String?
  size_43x43 String?
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_images")
}

model ProduitFlag {
  id Int @id @default(autoincrement())
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  label String
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_flags")
}

model ProduitLabelsQualite {
  id Int @id @default(autoincrement())
  labels_qualite LabelsQualite @relation(fields: [labels_qualite_id], references: [id])
  labels_qualite_id Int
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_labels_qualites")
}


model ProduitPromotion {
  id Int @id @default(autoincrement())
  promotion Promotion @relation(fields: [promotion_id], references: [id])
  promotion_id Int
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_promotions")
}

model ProduitPreferencesAlimentaire {
  id Int @id @default(autoincrement())
  preferences_alimentaire PreferencesAlimentaire @relation(fields: [preferences_alimentaire_id], references: [id])
  preferences_alimentaire_id Int
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_preferences_alimentaires")
}

model ProduitSubstancesControverse {
  id Int @id @default(autoincrement())
  substances_controversee SubstancesControverse @relation(fields: [substances_controversee_id], references: [id])
  substances_controversee_id Int
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_substances_controversees")
}

model ProduitFormat {
  id Int @id @default(autoincrement())
  format Format @relation(fields: [format_id], references: [id])
  format_id Int
  produit Produit @relation(fields: [produit_id], references: [id])
  produit_id Int
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

	@@map(name: "produit_formats")
}
