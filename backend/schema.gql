# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProvidersModel {
  id: Float
  label: String!
  prefixUrl: String
  updatedAt: DateTime
  createdAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProviderResponseDto {
  token: String
  code: Float
  details: String
  message: String
  item: ProvidersModel
  items: [ProvidersModel!]
}

type RayonsModel {
  id: Float
  label: String!
  slug: String!
  uri: String!
  code: String!
  level: Int!
  updatedAt: DateTime
  createdAt: DateTime
}

type RayonResponseDto {
  token: String
  code: Float
  details: String
  message: String
  item: RayonsModel
  items: [RayonsModel!]
}

type GroupsModel {
  id: Float
  label: String!
  slug: String!
  type: String!
  urlCarrefour: String!
  urlAuchan: String!
  rayons: [RayonsModel!]
  updatedAt: DateTime
  createdAt: DateTime
}

type GroupResponseDto {
  token: String
  code: Float
  details: String
  message: String
  item: GroupsModel
  items: [GroupsModel!]
}

type UsersModel {
  id: Float
  googleId: String
  email: String!
  civilite: String!
  firstname: String!
  lastname: String!
  password: String
  updatedAt: DateTime
  createdAt: DateTime
}

type UserResponseDto {
  token: String
  code: Float
  details: String
  message: String
  item: UsersModel
  items: [UsersModel!]
}

type ProductsModel {
  id: Float
  label: String!
  brand: String!
  ean: String!
  slug: String!
  uri: String
  packaging: String
  origin: String
  format: String
  price: String
  unitOfMeasure: String
  perUnitLabel: String
  taxMessage: String
  perUnit: String
  updatedAt: DateTime
  createdAt: DateTime
}

type ProductResponseDto {
  token: String
  code: Float
  details: String
  message: String
  item: ProductsModel
  items: [ProductsModel!]
}

type BrandsModel {
  id: Float
  label: String!
  updatedAt: DateTime
  createdAt: DateTime
}

type BrandResponseDto {
  token: String
  code: Float
  details: String
  message: String
  item: BrandsModel
  items: [BrandsModel!]
}

type Query {
  providers: ProviderResponseDto!
  provider(id: Float!): ProviderResponseDto!
  rayons: RayonResponseDto!
  rayon(id: Float!): RayonResponseDto!
  groups: GroupResponseDto!
  group(id: Float!): GroupResponseDto!
  me: UserResponseDto!
  products: ProductResponseDto!
  product(id: Float!): ProductResponseDto!
  brands: BrandResponseDto!
  brand(id: Float!): BrandResponseDto!
}

type Mutation {
  createProvider(input: ProviderInputDto!): ProviderResponseDto!
  createAllProvider: ProviderResponseDto!
  deleteProvider(id: Float!): ProviderResponseDto!
  deleteAllProvider: ProviderResponseDto!
  updateProvider(input: ProviderInputDto!): ProviderResponseDto!
  createRayon(input: RayonInputDto!): RayonResponseDto!
  createAllRayon: RayonResponseDto!
  deleteRayon(id: Float!): RayonResponseDto!
  deleteAllRayon: RayonResponseDto!
  updateRayon(input: RayonInputDto!): RayonResponseDto!
  createGroup(input: GroupInputDto!): GroupResponseDto!
  createAllGroup: GroupResponseDto!
  deleteGroup(id: Float!): GroupResponseDto!
  deleteAllGroup: GroupResponseDto!
  updateGroup(input: GroupInputDto!): GroupResponseDto!
  signup(input: UserInputDto!): UserResponseDto!
  signin(input: UserSigninInputDto!): UserResponseDto!
  signout: UserResponseDto!
  resetPassword(email: String!): UserResponseDto!
  resetPasswordSave(password: String!, token: String!): UserResponseDto!
  createProduct(input: ProductInputDto!): ProductResponseDto!
  createAllProduct: ProductResponseDto!
  deleteProduct(id: Float!): ProductResponseDto!
  deleteAllProduct: ProductResponseDto!
  updateProduct(input: ProductInputDto!): ProductResponseDto!
  createBrand(input: BrandInputDto!): BrandResponseDto!
  createAllBrand: BrandResponseDto!
  deleteBrand(id: Float!): BrandResponseDto!
  deleteAllBrand: BrandResponseDto!
  updateBrand(input: BrandInputDto!): BrandResponseDto!
}

input ProviderInputDto {
  id: Float
  label: String!
  prefixUrl: String
}

input RayonInputDto {
  id: Float
  label: String!
  slug: String!
  uri: String
  code: String
  level: Int
}

input GroupInputDto {
  id: Float
  label: String!
  slug: String!
  type: String!
  urlCarrefour: String!
  urlAuchan: String!
  rayons: [RayonRelationDto!]
}

input RayonRelationDto {
  id: Float
  label: String
}

input UserInputDto {
  id: Float
  googleId: String
  email: String!
  civilite: String!
  firstname: String!
  lastname: String!
  password: String
}

input UserSigninInputDto {
  email: String!
  password: String!
}

input ProductInputDto {
  id: Float
  label: String!
  prefixUrl: String
}

input BrandInputDto {
  id: Float
  label: String!
}
